{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE=process.env.REACT_APP_API_BASE||window.location.origin;function App(){const[status,setStatus]=useState(null);const[sqlData,setSqlData]=useState({dwjjob:[],dwvveh:[]});const[adbIPs,setAdbIPs]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[message,setMessage]=useState(null);const[newIP,setNewIP]=useState('');const[updateInterval,setUpdateInterval]=useState(5);const[autoUpdateEnabled,setAutoUpdateEnabled]=useState(false);const[extractionModalOpen,setExtractionModalOpen]=useState(false);const[extractionResult,setExtractionResult]=useState(null);// Utility functions\nconst apiCall=async function(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{const options={method:method,headers:{'Content-Type':'application/json'}};if(data){options.body=JSON.stringify(data);}const response=await fetch(`${API_BASE}${endpoint}`,options);return await response.json();}catch(error){console.error('API call failed:',error);return{error:error.message};}};const showMessage=function(msg){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'success';setMessage({text:msg,type});setTimeout(()=>setMessage(null),5000);};// Data fetching functions\nconst fetchStatus=async()=>{try{const data=await apiCall('/status');if(data.error){setError(`Error loading status: ${data.error}`);return;}setStatus(data);setAutoUpdateEnabled(data.autoEnabled||false);setUpdateInterval(data.intervalMinutes||5);setError(null);}catch(error){setError(`Error loading status: ${error.message}`);}};const fetchSQLData=async()=>{try{const[dwjjob,dwvveh]=await Promise.all([apiCall('/webhook/dwjjob'),apiCall('/webhook/dwvveh')]);setSqlData({dwjjob:dwjjob.error?[]:dwjjob,dwvveh:dwvveh.error?[]:dwvveh});}catch(error){console.error('Error loading SQL data:',error);}};const fetchADBIPs=async()=>{try{const data=await apiCall('/webhook/adb-ips');if(data.error){setError(`Error loading ADB IPs: ${data.error}`);return;}setAdbIPs(Array.isArray(data)?data:[]);setError(null);}catch(error){setError(`Error loading ADB IPs: ${error.message}`);}};// Control functions\nconst toggleAutoUpdate=async()=>{const result=await apiCall('/webhook/control','POST',{action:'toggle_auto'});if(result.error){showMessage(`Error: ${result.error}`,'error');}else{showMessage('Auto-update toggled successfully');fetchStatus();}};const setInterval=async()=>{const minutes=parseInt(updateInterval);if(isNaN(minutes)||minutes<1||minutes>1440){showMessage('Please enter a valid interval between 1 and 1440 minutes','error');return;}const result=await apiCall('/webhook/control','POST',{action:'set_interval',minutes:minutes});if(result.error){showMessage(`Error: ${result.error}`,'error');}else{showMessage(`Update interval set to ${minutes} minutes`);fetchStatus();}};const runExtraction=async()=>{const result=await apiCall('/webhook/control','POST',{action:'run_extraction'});if(result.error){showMessage(`Error: ${result.error}`,'error');}else{setExtractionResult(result.extractionResult||{message:result.message});setExtractionModalOpen(true);setTimeout(()=>{fetchStatus();fetchSQLData();},5000);}};const addADBIP=async()=>{if(!newIP.trim()){showMessage('Please enter an IP address','error');return;}const result=await apiCall('/webhook/adb-ips','POST',{action:'add',ip:newIP.trim()});if(result.error){showMessage(`Error adding IP: ${result.error}`,'error');}else{showMessage(`Successfully added IP: ${newIP}`);setNewIP('');fetchADBIPs();}};const removeADBIP=async ip=>{if(!window.confirm(`Are you sure you want to remove ${ip}?`)){return;}const result=await apiCall('/webhook/adb-ips','POST',{action:'remove',ip:ip});if(result.error){showMessage(`Error removing IP: ${result.error}`,'error');}else{showMessage(`Successfully removed IP: ${ip}`);fetchADBIPs();}};const testConnection=async ip=>{const result=await apiCall('/webhook/test-connection','POST',{ip:ip});if(result.error){showMessage(`Connection test failed: ${result.error}`,'error');}else{showMessage(`Connection test ${result.connected?'PASSED':'FAILED'} for ${ip}`);fetchADBIPs();// Refresh the list to show updated status\n}};// Initial data load\nuseEffect(()=>{const loadData=async()=>{setLoading(true);await Promise.all([fetchStatus(),fetchSQLData(),fetchADBIPs()]);setLoading(false);};loadData();},[]);// Auto-refresh status every 30 seconds (without flashing)\nuseEffect(()=>{const interval=setInterval(()=>{fetchStatus();},30000);return()=>clearInterval(interval);},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading BTT Auto Manager...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDE9B BTT Auto Manager\"}),/*#__PURE__*/_jsx(\"p\",{children:\"SQL Database Extraction & ADB Management\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[message&&/*#__PURE__*/_jsx(\"div\",{className:`message ${message.type}`,children:message.text}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\uD83D\\uDCCA System Status\",/*#__PURE__*/_jsx(\"button\",{className:\"refresh-btn\",onClick:fetchStatus,children:\"\\uD83D\\uDD04 Refresh\"})]}),status&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Auto-Update Status\"}),/*#__PURE__*/_jsx(\"div\",{className:`status-value ${status.autoEnabled?'status-online':'status-offline'}`,children:status.autoEnabled?'🟢 Enabled':'🔴 Disabled'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Webhook Server\"}),/*#__PURE__*/_jsx(\"div\",{className:\"status-value status-online\",children:\"\\uD83D\\uDFE2 Running\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Update Interval\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-value\",children:[status.intervalMinutes||5,\" minutes\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Server Uptime\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-value\",children:[Math.round(status.uptime||0),\" seconds\"]})]})]}),status&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Database Statistics\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"data-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Metric\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Value\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Last Updated\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Locations\"}),/*#__PURE__*/_jsx(\"td\",{children:status.lastLocations||0}),/*#__PURE__*/_jsx(\"td\",{children:status.lastProcessed||'Never'})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Cars\"}),/*#__PURE__*/_jsx(\"td\",{children:status.lastCars||0}),/*#__PURE__*/_jsx(\"td\",{children:status.lastProcessed||'Never'})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Loads\"}),/*#__PURE__*/_jsx(\"td\",{children:status.lastLoads||0}),/*#__PURE__*/_jsx(\"td\",{children:status.lastProcessed||'Never'})]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\uD83D\\uDDC4\\uFE0F SQL Database Data\",/*#__PURE__*/_jsx(\"button\",{className:\"refresh-btn\",onClick:fetchSQLData,children:\"\\uD83D\\uDD04 Refresh\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"DWJJOB Data (\",sqlData.dwjjob.length,\" records)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-value\",children:[sqlData.dwjjob.length,\" locations\"]}),sqlData.dwjjob.length>0&&/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>alert('View DWJJOB data functionality'),children:\"View Details\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"DWVVEH Data (\",sqlData.dwvveh.length,\" records)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-value\",children:[sqlData.dwvveh.length,\" vehicles\"]}),sqlData.dwvveh.length>0&&/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>alert('View DWVVEH data functionality'),children:\"View Details\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\uD83D\\uDCF1 ADB Device Management\",/*#__PURE__*/_jsx(\"button\",{className:\"refresh-btn\",onClick:fetchADBIPs,children:\"\\uD83D\\uDD04 Refresh\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Configured ADB IP Addresses\"}),adbIPs.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No ADB IP addresses configured\"}):/*#__PURE__*/_jsxs(\"table\",{className:\"data-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"IP Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Connection Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Test Result\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:adbIPs.map((entry,index)=>{const ip=entry.ip||entry;const connected=entry.connected===true;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:ip}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:`connection-status ${connected?'connection-connected':'connection-disconnected'}`,children:connected?'Connected':'Disconnected'})}),/*#__PURE__*/_jsx(\"td\",{children:connected?'PASS':'FAIL'}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"button danger\",onClick:()=>removeADBIP(ip),children:\"Remove\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button warning\",onClick:()=>testConnection(ip),children:\"Test\"})]})]},index);})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"new-ip\",children:\"Add New ADB IP:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"new-ip\",value:newIP,onChange:e=>setNewIP(e.target.value),placeholder:\"192.168.1.100:5555\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button success\",onClick:addADBIP,children:\"Add IP\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u2699\\uFE0F System Controls\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Auto-Update Settings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Auto-Update Status:\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'10px'},children:[/*#__PURE__*/_jsxs(\"label\",{className:\"toggle-switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:autoUpdateEnabled,onChange:toggleAutoUpdate}),/*#__PURE__*/_jsx(\"span\",{className:\"slider\"})]}),/*#__PURE__*/_jsx(\"span\",{children:autoUpdateEnabled?'Enabled':'Disabled'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"update-interval\",children:\"Update Interval (minutes):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"update-interval\",value:updateInterval,onChange:e=>setUpdateInterval(e.target.value),min:\"1\",max:\"1440\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:setInterval,children:\"Set Interval\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Manual Controls\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:runExtraction,children:\"Run Extraction Now\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:fetchStatus,children:\"Update Status\"})]})]})]})]}),extractionModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setExtractionModalOpen(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"h2\",{children:\"SQL Extraction Result\"}),extractionResult&&/*#__PURE__*/_jsx(\"div\",{style:{maxHeight:'60vh',overflowY:'auto',textAlign:'left',fontSize:'0.95em'},children:/*#__PURE__*/_jsxs(\"pre\",{style:{whiteSpace:'pre-wrap',wordBreak:'break-all'},children:[extractionResult.success===true?'✅ Extraction Succeeded\\n':'',extractionResult.success===false?'❌ Extraction Failed\\n':'',extractionResult.stdout?`\\n[stdout]\\n${extractionResult.stdout}`:'',extractionResult.stderr?`\\n[stderr]\\n${extractionResult.stderr}`:'',extractionResult.log?`\\n[getsql.log]\\n${extractionResult.log}`:'',extractionResult.error?`\\n[error]\\n${extractionResult.error}`:'',extractionResult.message?`\\n${extractionResult.message}`:'']})}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setExtractionModalOpen(false),style:{marginTop:16},children:\"Close\"})]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","API_BASE","process","env","REACT_APP_API_BASE","window","location","origin","App","status","setStatus","sqlData","setSqlData","dwjjob","dwvveh","adbIPs","setAdbIPs","loading","setLoading","error","setError","message","setMessage","newIP","setNewIP","updateInterval","setUpdateInterval","autoUpdateEnabled","setAutoUpdateEnabled","extractionModalOpen","setExtractionModalOpen","extractionResult","setExtractionResult","apiCall","endpoint","method","arguments","length","undefined","data","options","headers","body","JSON","stringify","response","fetch","json","console","showMessage","msg","type","text","setTimeout","fetchStatus","autoEnabled","intervalMinutes","fetchSQLData","Promise","all","fetchADBIPs","Array","isArray","toggleAutoUpdate","result","action","setInterval","minutes","parseInt","isNaN","runExtraction","addADBIP","trim","ip","removeADBIP","confirm","testConnection","connected","loadData","interval","clearInterval","className","children","onClick","Math","round","uptime","lastLocations","lastProcessed","lastCars","lastLoads","alert","map","entry","index","htmlFor","id","value","onChange","e","target","placeholder","style","display","alignItems","gap","checked","min","max","stopPropagation","maxHeight","overflowY","textAlign","fontSize","whiteSpace","wordBreak","success","stdout","stderr","log","marginTop"],"sources":["/mnt/user/appdata/BCASql extraction/web-ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || window.location.origin;\n\nfunction App() {\n  const [status, setStatus] = useState(null);\n  const [sqlData, setSqlData] = useState({ dwjjob: [], dwvveh: [] });\n  const [adbIPs, setAdbIPs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [newIP, setNewIP] = useState('');\n  const [updateInterval, setUpdateInterval] = useState(5);\n  const [autoUpdateEnabled, setAutoUpdateEnabled] = useState(false);\n  const [extractionModalOpen, setExtractionModalOpen] = useState(false);\n  const [extractionResult, setExtractionResult] = useState(null);\n\n  // Utility functions\n  const apiCall = async (endpoint, method = 'GET', data = null) => {\n    try {\n      const options = {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      };\n      \n      if (data) {\n        options.body = JSON.stringify(data);\n      }\n      \n      const response = await fetch(`${API_BASE}${endpoint}`, options);\n      return await response.json();\n    } catch (error) {\n      console.error('API call failed:', error);\n      return { error: error.message };\n    }\n  };\n\n  const showMessage = (msg, type = 'success') => {\n    setMessage({ text: msg, type });\n    setTimeout(() => setMessage(null), 5000);\n  };\n\n  // Data fetching functions\n  const fetchStatus = async () => {\n    try {\n      const data = await apiCall('/status');\n      if (data.error) {\n        setError(`Error loading status: ${data.error}`);\n        return;\n      }\n      setStatus(data);\n      setAutoUpdateEnabled(data.autoEnabled || false);\n      setUpdateInterval(data.intervalMinutes || 5);\n      setError(null);\n    } catch (error) {\n      setError(`Error loading status: ${error.message}`);\n    }\n  };\n\n  const fetchSQLData = async () => {\n    try {\n      const [dwjjob, dwvveh] = await Promise.all([\n        apiCall('/webhook/dwjjob'),\n        apiCall('/webhook/dwvveh')\n      ]);\n      \n      setSqlData({\n        dwjjob: dwjjob.error ? [] : dwjjob,\n        dwvveh: dwvveh.error ? [] : dwvveh\n      });\n    } catch (error) {\n      console.error('Error loading SQL data:', error);\n    }\n  };\n\n  const fetchADBIPs = async () => {\n    try {\n      const data = await apiCall('/webhook/adb-ips');\n      if (data.error) {\n        setError(`Error loading ADB IPs: ${data.error}`);\n        return;\n      }\n      setAdbIPs(Array.isArray(data) ? data : []);\n      setError(null);\n    } catch (error) {\n      setError(`Error loading ADB IPs: ${error.message}`);\n    }\n  };\n\n  // Control functions\n  const toggleAutoUpdate = async () => {\n    const result = await apiCall('/webhook/control', 'POST', {\n      action: 'toggle_auto'\n    });\n    \n    if (result.error) {\n      showMessage(`Error: ${result.error}`, 'error');\n    } else {\n      showMessage('Auto-update toggled successfully');\n      fetchStatus();\n    }\n  };\n\n  const setInterval = async () => {\n    const minutes = parseInt(updateInterval);\n    if (isNaN(minutes) || minutes < 1 || minutes > 1440) {\n      showMessage('Please enter a valid interval between 1 and 1440 minutes', 'error');\n      return;\n    }\n    \n    const result = await apiCall('/webhook/control', 'POST', {\n      action: 'set_interval',\n      minutes: minutes\n    });\n    \n    if (result.error) {\n      showMessage(`Error: ${result.error}`, 'error');\n    } else {\n      showMessage(`Update interval set to ${minutes} minutes`);\n      fetchStatus();\n    }\n  };\n\n  const runExtraction = async () => {\n    const result = await apiCall('/webhook/control', 'POST', {\n      action: 'run_extraction'\n    });\n    \n    if (result.error) {\n      showMessage(`Error: ${result.error}`, 'error');\n    } else {\n      setExtractionResult(result.extractionResult || { message: result.message });\n      setExtractionModalOpen(true);\n      setTimeout(() => {\n        fetchStatus();\n        fetchSQLData();\n      }, 5000);\n    }\n  };\n\n  const addADBIP = async () => {\n    if (!newIP.trim()) {\n      showMessage('Please enter an IP address', 'error');\n      return;\n    }\n    \n    const result = await apiCall('/webhook/adb-ips', 'POST', {\n      action: 'add',\n      ip: newIP.trim()\n    });\n    \n    if (result.error) {\n      showMessage(`Error adding IP: ${result.error}`, 'error');\n    } else {\n      showMessage(`Successfully added IP: ${newIP}`);\n      setNewIP('');\n      fetchADBIPs();\n    }\n  };\n\n  const removeADBIP = async (ip) => {\n    if (!window.confirm(`Are you sure you want to remove ${ip}?`)) {\n      return;\n    }\n    \n    const result = await apiCall('/webhook/adb-ips', 'POST', {\n      action: 'remove',\n      ip: ip\n    });\n    \n    if (result.error) {\n      showMessage(`Error removing IP: ${result.error}`, 'error');\n    } else {\n      showMessage(`Successfully removed IP: ${ip}`);\n      fetchADBIPs();\n    }\n  };\n\n  const testConnection = async (ip) => {\n    const result = await apiCall('/webhook/test-connection', 'POST', {\n      ip: ip\n    });\n    \n    if (result.error) {\n      showMessage(`Connection test failed: ${result.error}`, 'error');\n    } else {\n      showMessage(`Connection test ${result.connected ? 'PASSED' : 'FAILED'} for ${ip}`);\n      fetchADBIPs(); // Refresh the list to show updated status\n    }\n  };\n\n  // Initial data load\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([\n        fetchStatus(),\n        fetchSQLData(),\n        fetchADBIPs()\n      ]);\n      setLoading(false);\n    };\n    \n    loadData();\n  }, []);\n\n  // Auto-refresh status every 30 seconds (without flashing)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchStatus();\n    }, 30000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <div className=\"loading\">Loading BTT Auto Manager...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>🚛 BTT Auto Manager</h1>\n        <p>SQL Database Extraction & ADB Management</p>\n      </div>\n      \n      <div className=\"content\">\n        {message && (\n          <div className={`message ${message.type}`}>\n            {message.text}\n          </div>\n        )}\n        \n        {error && (\n          <div className=\"error\">\n            {error}\n          </div>\n        )}\n\n        {/* System Status Section */}\n        <div className=\"section\">\n          <h2>📊 System Status \n            <button className=\"refresh-btn\" onClick={fetchStatus}>\n              🔄 Refresh\n            </button>\n          </h2>\n          \n          {status && (\n            <div className=\"status-grid\">\n              <div className=\"status-card\">\n                <h3>Auto-Update Status</h3>\n                <div className={`status-value ${status.autoEnabled ? 'status-online' : 'status-offline'}`}>\n                  {status.autoEnabled ? '🟢 Enabled' : '🔴 Disabled'}\n                </div>\n              </div>\n              <div className=\"status-card\">\n                <h3>Webhook Server</h3>\n                <div className=\"status-value status-online\">🟢 Running</div>\n              </div>\n              <div className=\"status-card\">\n                <h3>Update Interval</h3>\n                <div className=\"status-value\">{status.intervalMinutes || 5} minutes</div>\n              </div>\n              <div className=\"status-card\">\n                <h3>Server Uptime</h3>\n                <div className=\"status-value\">{Math.round(status.uptime || 0)} seconds</div>\n              </div>\n            </div>\n          )}\n          \n          {status && (\n            <div className=\"status-card\">\n              <h3>Database Statistics</h3>\n              <table className=\"data-table\">\n                <thead>\n                  <tr>\n                    <th>Metric</th>\n                    <th>Value</th>\n                    <th>Last Updated</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Locations</td>\n                    <td>{status.lastLocations || 0}</td>\n                    <td>{status.lastProcessed || 'Never'}</td>\n                  </tr>\n                  <tr>\n                    <td>Cars</td>\n                    <td>{status.lastCars || 0}</td>\n                    <td>{status.lastProcessed || 'Never'}</td>\n                  </tr>\n                  <tr>\n                    <td>Loads</td>\n                    <td>{status.lastLoads || 0}</td>\n                    <td>{status.lastProcessed || 'Never'}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n\n        {/* SQL Data Section */}\n        <div className=\"section\">\n          <h2>🗄️ SQL Database Data \n            <button className=\"refresh-btn\" onClick={fetchSQLData}>\n              🔄 Refresh\n            </button>\n          </h2>\n          \n          <div className=\"status-grid\">\n            <div className=\"status-card\">\n              <h3>DWJJOB Data ({sqlData.dwjjob.length} records)</h3>\n              <div className=\"status-value\">{sqlData.dwjjob.length} locations</div>\n              {sqlData.dwjjob.length > 0 && (\n                <button className=\"button\" onClick={() => alert('View DWJJOB data functionality')}>\n                  View Details\n                </button>\n              )}\n            </div>\n            <div className=\"status-card\">\n              <h3>DWVVEH Data ({sqlData.dwvveh.length} records)</h3>\n              <div className=\"status-value\">{sqlData.dwvveh.length} vehicles</div>\n              {sqlData.dwvveh.length > 0 && (\n                <button className=\"button\" onClick={() => alert('View DWVVEH data functionality')}>\n                  View Details\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* ADB Device Management Section */}\n        <div className=\"section\">\n          <h2>📱 ADB Device Management \n            <button className=\"refresh-btn\" onClick={fetchADBIPs}>\n              🔄 Refresh\n            </button>\n          </h2>\n          \n          <div className=\"status-card\">\n            <h3>Configured ADB IP Addresses</h3>\n            \n            {adbIPs.length === 0 ? (\n              <p>No ADB IP addresses configured</p>\n            ) : (\n              <table className=\"data-table\">\n                <thead>\n                  <tr>\n                    <th>IP Address</th>\n                    <th>Connection Status</th>\n                    <th>Test Result</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {adbIPs.map((entry, index) => {\n                    const ip = entry.ip || entry;\n                    const connected = entry.connected === true;\n                    return (\n                      <tr key={index}>\n                        <td>{ip}</td>\n                        <td>\n                          <span className={`connection-status ${connected ? 'connection-connected' : 'connection-disconnected'}`}>\n                            {connected ? 'Connected' : 'Disconnected'}\n                          </span>\n                        </td>\n                        <td>{connected ? 'PASS' : 'FAIL'}</td>\n                        <td>\n                          <button className=\"button danger\" onClick={() => removeADBIP(ip)}>\n                            Remove\n                          </button>\n                          <button className=\"button warning\" onClick={() => testConnection(ip)}>\n                            Test\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n          \n          <div className=\"input-group\">\n            <label htmlFor=\"new-ip\">Add New ADB IP:</label>\n            <input\n              type=\"text\"\n              id=\"new-ip\"\n              value={newIP}\n              onChange={(e) => setNewIP(e.target.value)}\n              placeholder=\"192.168.1.100:5555\"\n            />\n            <button className=\"button success\" onClick={addADBIP}>\n              Add IP\n            </button>\n          </div>\n        </div>\n\n        {/* Control Section */}\n        <div className=\"section\">\n          <h2>⚙️ System Controls</h2>\n          \n          <div className=\"status-grid\">\n            <div className=\"status-card\">\n              <h3>Auto-Update Settings</h3>\n              <div className=\"input-group\">\n                <label>Auto-Update Status:</label>\n                <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n                  <label className=\"toggle-switch\">\n                    <input\n                      type=\"checkbox\"\n                      checked={autoUpdateEnabled}\n                      onChange={toggleAutoUpdate}\n                    />\n                    <span className=\"slider\"></span>\n                  </label>\n                  <span>{autoUpdateEnabled ? 'Enabled' : 'Disabled'}</span>\n                </div>\n              </div>\n              <div className=\"input-group\">\n                <label htmlFor=\"update-interval\">Update Interval (minutes):</label>\n                <input\n                  type=\"number\"\n                  id=\"update-interval\"\n                  value={updateInterval}\n                  onChange={(e) => setUpdateInterval(e.target.value)}\n                  min=\"1\"\n                  max=\"1440\"\n                />\n                <button className=\"button\" onClick={setInterval}>\n                  Set Interval\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"status-card\">\n              <h3>Manual Controls</h3>\n              <button className=\"button\" onClick={runExtraction}>\n                Run Extraction Now\n              </button>\n              <button className=\"button\" onClick={fetchStatus}>\n                Update Status\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Extraction Result Modal */}\n      {extractionModalOpen && (\n        <div className=\"modal-overlay\" onClick={() => setExtractionModalOpen(false)}>\n          <div className=\"modal\" onClick={e => e.stopPropagation()}>\n            <h2>SQL Extraction Result</h2>\n            {extractionResult && (\n              <div style={{ maxHeight: '60vh', overflowY: 'auto', textAlign: 'left', fontSize: '0.95em' }}>\n                <pre style={{ whiteSpace: 'pre-wrap', wordBreak: 'break-all' }}>\n                  {extractionResult.success === true ? '✅ Extraction Succeeded\\n' : ''}\n                  {extractionResult.success === false ? '❌ Extraction Failed\\n' : ''}\n                  {extractionResult.stdout ? `\\n[stdout]\\n${extractionResult.stdout}` : ''}\n                  {extractionResult.stderr ? `\\n[stderr]\\n${extractionResult.stderr}` : ''}\n                  {extractionResult.log ? `\\n[getsql.log]\\n${extractionResult.log}` : ''}\n                  {extractionResult.error ? `\\n[error]\\n${extractionResult.error}` : ''}\n                  {extractionResult.message ? `\\n${extractionResult.message}` : ''}\n                </pre>\n              </div>\n            )}\n            <button className=\"button\" onClick={() => setExtractionModalOpen(false)} style={{ marginTop: 16 }}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}